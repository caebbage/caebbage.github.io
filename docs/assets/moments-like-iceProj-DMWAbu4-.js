import{c as r,a as o,w as s,_ as n,b as t,d as a,o as l,e as i}from"./index-iYWuYMyK.js";const h={id:"project"},d={class:"adjacent"},m={class:"gallery-group"},u={class:"gallery-group"},f={class:"gallery-group"},g={class:"gallery-group"},p={class:"gallery-group"},y={__name:"moments-like-iceProj",setup(b){return(c,e)=>(l(),r("main",h,[o(n,{class:"intro"},{default:s(()=>e[0]||(e[0]=[t(`\r
# MOMENTS LIKE ICE\r
\r
> Your childhood best friend is back from magic university for the week, and you've dearly missed her...there's some feelings you never admitted before she moved away... But you can use your magic to influence her thoughts during your chats about her time in the big city! Maybe coming home's what's best for her?\r
>\r
> As you influence her, you'll determine the ending of the story, and your friend will come to a decision about what to do.  Will she finally understand your wish to love and protect her?\r
\r
Team of 10 people, made during **Global Game Jam '25** in 48 hours.\r
[Available to play in-browser.](https://koloquials.itch.io/moments-like-ice)\r
\r
Handled technical art; shader design, VFX, post processing, and art implementation.\r
`)])),_:1}),e[13]||(e[13]=t()),o(n,null,{default:s(()=>e[1]||(e[1]=[t(`\r
## THE DESIGN PROCESS\r
This year's global game jam theme was **bubble**, after our initial planning discussions, we decided we wanted a game revolving around *bubbles of memories*, using a *Pokemon Ranger*-like circling system to capture our choices. On top of this, we wanted to play with the visuals of frozen bubbles, which are [very cool looking](https://www.youtube.com/watch?v=33f8G_FnYng), if you've never seen it before. As the technical artist, it was then my task to translate these visual ideas into something that looks good.\r
`)])),_:1}),e[14]||(e[14]=t()),a("section",d,[o(n,null,{default:s(()=>e[2]||(e[2]=[t(`\r
  ### THE BUBBLE\r
  The bubble was a key component of our gameplay, and something we needed to ensure looked good. I wanted to design something easily customizable; initially, I'd hoped to do the bubble entirely procedurally, potentially for easy support of custom shapes, but quickly came into problems as I discovered that Unity *doesn't have a blur node* within their shader graph system, which is rather unideal for what I had in mind. After finding some custom implementations of it that, to me, all left something desired, I decided to go with a sprite-based approach instead.\r
\r
  For the sprite of the bubble, I wanted to compact as much of the information about the bubble's appearance into a single image. I ended up with something that was split like this;\r
  - **Red Channel**: The *hard highlights* of the bubble.\r
  - **Green Channel**: The *soft highlights* of the bubble, which get cut into somewhat by the blue channel.\r
  - **Blue Channel**: The *inner bubble*, which I wanted separate from the alpha at the time despite affecting the final rendered alpha; helps find the inner area of the bubble, which not only determines transparency, but where the holographic effect begins to fade off.\r
  - **Alpha Channel**: The hard outline of the bubble itself.\r
\r
The outline of the bubble is something I added after creating this original setup, as upon feedback, there was a request for a more solid outline and a bit of wobbling shape variation (rather than a static full circle, shape-wise). There was also the matter of the freeze effect; I'd originally intended to create it with a simple voronoi, but a flower-like effect was requested for the visuals of the effect, so in the interest of time I generated a texture using [Pixel Composer](https://makham.itch.io/pixel-composer).\r
\r
I also created some animations afterwards to support the bubble, including its animation on entry, a simple VFX for when it pops, and then an animation for when it freezes and then leaves the scene.\r
  `)])),_:1}),e[4]||(e[4]=t()),a("section",m,[o(i,{image:"/src/assets/image/project/moments-like-ice/bubbleidle.gif",desc:"Bubble in its idle state."}),e[3]||(e[3]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/BubbleSprite.png",desc:"The raw sprite for the bubble itself, with RGB channels separated into different components of the bubble itself. Texture was added by our Designer, Rachel Geng."})])]),e[15]||(e[15]=t()),a("section",u,[o(i,{image:"/src/assets/image/project/moments-like-ice/bubblenodes.png",desc:"The node setup for the bubble shader. The bubble base color, holographic gradient, line thickness, holographic movement, and wobble strength are all customizable, along with textures for the holographic and freeze aspects."}),e[5]||(e[5]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/bubblespawn.gif",desc:"The entry animation for the bubble in-game."})]),e[16]||(e[16]=t()),a("section",f,[o(i,{image:"/src/assets/image/project/moments-like-ice/bubbleparam.gif",desc:"Demonstration of freeze effect parameter."}),e[6]||(e[6]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/freezenodes.png",desc:"The node setup used to create the freeze effect's texture."}),e[7]||(e[7]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/bubblefreeze.gif",desc:"The effect in-game, freezing and then transitioning out."})]),e[17]||(e[17]=t()),o(n,null,{default:s(()=>e[8]||(e[8]=[t(`\r
  ### THE LINE EFFECT\r
  Besides the bubble, we also wanted the line stroke for the drawing to be stylized. Our Director wanted something that looked frozen, with a vaguely brush-like stroke effect, but due to the moving nature of the stroke itself (and how the sprite is stretched across the stroke) it could cause a weird "dragging" feeling if the texture was baked into a static sprite. I got around this by applying a screen-space noise texture to the stroke effect, which would help the effect feel a bit more consistent. We also came up with a little ice shard particle shader that moved with the cursor position and whose particles were somewhat determined by cursor movement to tie it together.\r
`)])),_:1}),e[18]||(e[18]=t()),a("section",g,[o(i,{image:"/src/assets/image/project/moments-like-ice/linecircle.gif",desc:"Demonstration of the line effect in action."}),e[9]||(e[9]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/linenodes.png",desc:"The node setup used to create the stroke texture."})]),e[19]||(e[19]=t()),o(n,null,{default:s(()=>e[10]||(e[10]=[t(`\r
  ### BRINGING IT ALL TOGETHER\r
  With those assets ready to go, much of the second day of development was used implementing graphics from our art team. Our art and narrative teams were not entirely familiar with in-engine implementation, so it became my task to put the final assets into our scenes, and ensuring assets worked as intended-- this included many art assets, as well as preparing the data hookups for the bubbles that appear in scene.\r
\r
  A little post processing goes a long way in making the final visuals come together. We wanted to have a dreamy feel to the game, so a combination of film grain, vignette, and bloom were used to give the game a bit of a dreamy feel.\r
`)])),_:1}),e[20]||(e[20]=t()),a("section",p,[o(i,{image:"/src/assets/image/project/moments-like-ice/postprocess-pre.png",desc:"The game prior to addition of post-processing."}),e[11]||(e[11]=t()),o(i,{image:"/src/assets/image/project/moments-like-ice/postprocess-post.gif",desc:"The game after addition of post-processing."})]),e[21]||(e[21]=t()),o(n,null,{default:s(()=>e[12]||(e[12]=[t(`\r
## LESSONS LEARNED\r
**What went well:** I genuinely had a lot of fun making the node-based shaders for this project, as well as the animations, and am very pleased with the visual results of what I had made. Another engineer and I ended up spending a bit of time after to kill some final bugs present in the game after the formal end-time, which results in the current product being very close to bug-free-- which, given the general time constraints, is a pretty great achievement.\r
\r
**Areas of improvement:** In retrospect, I think I could've optimized the shader setup for the bubble a bit further if I had the time: for example, the holographic texture and freeze texture, both being black-and-white, could've been combined into a single texture for less files. There were a lot of frustrations with the limitations of shader graphs, and had I more time, it would've been nice to for example make the holographic texture via a custom node and HLSL, by creating 1D noise (for stripes) and then warping it based off of a 2D noise map, rather than essentially doing the same thing but in an art program. In a game jam, these issues are minor, but knowing more optimal solutions is useful in the context of more serious production.\r
\r
There were also some frustrations relating to inadequate communication of file specs, resulting in me spending about half an hour to an hour adjusting image assets so that they would work for the game. This is partially an issue of the artists not knowing implementation, so in the future, briefing art team members on how to do such would be of benefit.\r
\r
**Closing thoughts:** I had a lot of fun, even with the final hours of crunch! It's really satisfying to see a vision come together, and for doing everything in just two days, we genuinely did a great job. I feel satisfied in being able to exercise myself in shader creation, and I hope to do more of it in the future.\r
`)])),_:1})]))}};export{y as default};
